<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kazyle.hugohelper.server.function.core.article.mapper.ArticleMapper">

    <resultMap id="ArticleResultMap" type="com.kazyle.hugohelper.server.function.core.article.entity.Article">
        <result column="user_id" property="userId" jdbcType="INTEGER"/>
        <result column="type" property="type" jdbcType="INTEGER"/>
        <result column="visit_count" property="visitCount" jdbcType="INTEGER"/>
        <result column="create_date" property="createDate" jdbcType="TIMESTAMP"/>
    </resultMap>
    <resultMap id="ArticlePlatformResultMap" type="com.kazyle.hugohelper.server.function.core.article.entity.ArticlePlatform">
        <result column="user_id" property="userId" jdbcType="INTEGER"/>
        <result column="create_date" property="createDate" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="select_fields">
        t.id,
        t.user_id,
        t.type,
        t.url,
        t.wechat,
        t.active,
        t.platform,
        t.times,
        t.visit_count,
        t.create_date
    </sql>

    <!--获取文章列表-->
    <select id="findList" parameterType="map" resultMap="ArticleResultMap">
        select
          <include refid="select_fields" />
        from
          hg_article t
        where
          t.user_id = #{userId}
        and
          t.hold = 0
        and
          t.type = #{type}
        <if test="platform != null and platform != ''">
            and t.platform = #{platform}
        </if>
        order by t.create_date desc, t.platform asc
    </select>

    <!--获取文章列表-->
    <select id="queryList" parameterType="map" resultMap="ArticleResultMap">
        select
          <include refid="select_fields" />
        from
          hg_article t
        where
          t.user_id = #{userId}
        and
          t.hold = 0
        and
          t.type = #{type}
        and
          t.platform in
        <foreach item="platform" collection="platforms" open="(" separator="," close=")">
            #{platform}
        </foreach>
        <if test="wechat != null and wechat != ''">
            and t.wechat = #{wechat}
        </if>
        and t.active = 1
        order by t.create_date desc, t.platform asc
    </select>

    <!--添加文章-->
    <insert id="save" useGeneratedKeys="true" keyProperty="id" parameterType="com.kazyle.hugohelper.server.function.core.article.entity.Article">
        insert into hg_article(
          `url`, `type`, `platform`, wechat, `user_id`, `times`, `create_date`
        ) values (
          #{url}, #{type}, #{platform}, #{wechat}, #{userId}, #{times}, #{createDate}
        )
    </insert>

    <update id="updateEntity" parameterType="com.kazyle.hugohelper.server.function.core.article.entity.Article">
        update hg_article t set t.platform = #{platform}, t.url = #{url}, t.times = #{times}, t.wechat = #{wechat}, t.visit_count = #{visitCount}
        where t.id = #{id}
    </update>

    <update id="autoStop" parameterType="map">
        update hg_article t set t.active = #{active}, t.visit_count = #{visitCount}
        where t.platform = #{platform} and t.user_id = #{userId} and t.wechat = #{wechat} and t.type = #{type}
    </update>

    <update id="activeArticle" parameterType="map">
        update hg_article t set t.active = (!t.active), t.visit_count = #{visitCount}
        where t.platform = #{platform} and t.user_id = #{userId} and t.wechat = #{wechat} and t.type = #{type}
    </update>

    <delete id="delete" parameterType="java.util.List">
        delete from hg_article where id in
        <foreach item="id" collection="list" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <update id="update" parameterType="java.util.List">
        update hg_article t set t.active = (!t.active), t.visit_count = 0 where id in
        <foreach item="id" collection="list" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

    <update id="updateActive" parameterType="long">
        update hg_article t set t.active = (!t.active) where id = #{id}
    </update>

    <update id="updateTimes" parameterType="long">
        update hg_article t set t.visit_count = (t.visit_count+1) where id = #{id}
    </update>

    <select id="queryPlatforms" parameterType="long" resultType="string">
        select
          t.name
        from
          hg_article_platform t
        where
          t.user_id = #{userId}
        order by t.create_date desc
    </select>

    <select id="queryPlatform" parameterType="map" resultMap="ArticlePlatformResultMap">
        select
          t.name
        from
          hg_article_platform t
        where
          t.user_id = #{userId}
        and
          t.name = #{platform}
    </select>

    <insert id="savePlatform" useGeneratedKeys="true" keyProperty="id" parameterType="com.kazyle.hugohelper.server.function.core.article.entity.ArticlePlatform">
        insert into hg_article_platform(
          `name`, `user_id`, `create_date`
        ) values (
          #{name}, #{userId}, #{createDate}
        )
    </insert>

    <update id="updateHold" parameterType="map">
        update hg_article t set t.hold = #{hold}, t.visit_count = 0
        where
          t.user_id = #{userId} and t.platform = #{platform} and t.type = #{type} and t.wechat = #{wechat}
    </update>

    <select id="findOne" parameterType="long" resultMap="ArticleResultMap">
        select
        <include refid="select_fields" />
        from
        hg_article t
        where
        t.id = #{id}
    </select>

    <update id="changeActiveJob">
        update hg_article t set t.active = 1, t.visit_count = 0
        where t.hold = 0 and t.type = 1 and t.user_id = 3
    </update>

</mapper>